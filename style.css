/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px}::-webkit-file-upload-button{font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}.visually-hidden:not(:focus):not(:active){position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;-webkit-clip-path:inset(100%);clip-path:inset(100%);clip:rect(0 0 0 0);overflow:hidden}body{font-family:Roboto,Verdana,Arial,Helvetica;font-size:14px;color:#2a282d}ol,ul{margin:0;padding:0}body,html{font-family:sans-serif;margin:0;padding:0;width:100%;height:100%;overflow:hidden}.snap-content{position:absolute;top:0;right:0;bottom:0;left:0;width:auto;height:auto;z-index:2;overflow:auto;-webkit-overflow-scrolling:touch;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.snap-drawers{position:absolute;top:0;right:0;bottom:0;left:0;width:auto;height:auto}.snap-drawer{position:absolute;top:0;right:auto;bottom:0;left:auto;width:265px;height:auto;overflow:auto;-webkit-overflow-scrolling:touch;transition:width .3s ease}.snap-drawer-left{left:0;z-index:1}.snap-drawer-right{right:0;z-index:1}.snapjs-left .snap-drawer-right,.snapjs-right .snap-drawer-left{display:none}.snapjs-expand-left .snap-drawer-left,.snapjs-expand-right .snap-drawer-right{width:100%}.snapjs-right .snap-drawer-left{display:block;right:0;left:auto}.snapjs-right .snap-drawer-right{display:none}#content{background:#bfc7d8 url(drag.png) center 75% no-repeat}#toolbar{background:#536ea7;border-bottom:1px solid #111b32;position:absolute;top:0;right:0;left:0;width:auto;height:44px}#toolbar h1{color:#fff;font-size:16px;line-height:22px;text-align:center;text-shadow:0 -1px 0 rgba(0,0,0,.8);position:absolute;top:0;right:44px;left:44px;width:auto;height:44px}#open-left{background:url(open.png) center center no-repeat;display:block;width:44px;height:44px}#do-drag,#no-drag{position:absolute;top:50%;left:50%;width:50%;height:100px;margin-left:-25%;margin-top:-50px;background:red;color:#fff;text-align:center;line-height:100px}#do-drag{background:green}.demo-social{padding:0 15px}.toggler{width:80%;background:rgba(255,255,255,.5);margin:0 auto;position:relative;top:70px;padding:20px;margin-bottom:20px;text-align:center}.search{padding-bottom:10px;border-bottom:1px solid rgba(0,0,0,.2);box-shadow:0 1px 0 rgba(255,255,255,.1)}#search{height:30px;width:87%;margin:7px 7px 0 7px;background:linear-gradient(#414a5a,#4c5464);background:-webkit-linear-gradient(#414a5a,#4c5464);padding-left:15px;border:1px solid #222936;border-radius:25px;box-shadow:inset 0 1px 2px -1px rgba(0,0,0,.5),0 1px 2px -1px rgba(255,255,255,.4)}#search:focus{outline:0;border-color:#151515}.drawer-inner{transition:opacity .3s ease}.snapjs-expand-left .drawer-inner,.snapjs-expand-right .drawer-inner{opacity:0}.opt{padding:20px;border-bottom:1px solid rgba(0,0,0,.1)}.opt p{font-weight:700;margin-top:0;margin-bottom:5px;color:#222;color:rgba(0,0,0,.6)}.snap-content{background:#bfc7d8}.snap-drawers{background:#323949}.snap-drawer{background:#323949;color:#eee}.snap-drawer h3{font-size:36px;font-weight:400;margin:15px}.snap-drawer h4{padding:15px;border-top:1px solid rgba(255,255,255,.1);margin-bottom:0}.snap-drawer ul{padding:0;margin:0;list-style-type:none}.snap-drawer li>a{display:block;border-bottom:1px solid rgba(0,0,0,.1);border-top:1px solid rgba(255,255,255,.1);padding:15px;font-weight:700;text-shadow:0 1px 0 #000;text-decoration:none;color:#ccc;text-indent:20px}.snap-drawer p{opacity:.5;padding:15px;font-size:12px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
